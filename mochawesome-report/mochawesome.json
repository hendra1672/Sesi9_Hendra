{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-23T00:43:53.379Z",
    "end": "2025-06-23T00:44:27.136Z",
    "duration": 33757,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bef39772-96c0-47a5-8caa-a3fd38224988",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b2ed1d5-39a2-46c4-9fa5-4542560355fe",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test1-web.js",
          "file": "\\tests\\test1-web.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1 - Web Address",
              "fullTitle": "Google Search Test Test Case 1 - Web Address",
              "timedOut": false,
              "duration": 3856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  browser yang dipergunakan chrome\n            driver = await new Builder().forBrowser('chrome').build();\n        \n        //  alamat browser\n            await driver.get('https://www.saucedemo.com');\n        //  cek tampilan dari alamat yang dituju dan menandakan test case 1 sukses\n            const title = await driver.getTitle();\n            assert.strictEqual(title,'Swag Labs');\n        //  menutup web driver\n            await driver.quit();",
              "err": {},
              "uuid": "ff48dc71-227b-4538-bf05-44db1594d57c",
              "parentUUID": "8b2ed1d5-39a2-46c4-9fa5-4542560355fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff48dc71-227b-4538-bf05-44db1594d57c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3856,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d71526bc-8d2b-44fc-99d7-6059b5c60605",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test2-login.js",
          "file": "\\tests\\test2-login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 2 - Login Negative Test Case",
              "fullTitle": "Google Search Test Test Case 2 - Login Negative Test Case",
              "timedOut": false,
              "duration": 3788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\n//  cek lokasi username dengan menggunakan css locator\n    let inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n    \n//  cek lokasi password dengan menggunakan xpath locator\n    let inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n//  cek lokasi tombol login dengan menggunakan classname locator\n    let buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \n//  input username dengan invalid username, valid password dan klik tombol login dengan negative test case        \n    await inputUsername.sendKeys('standard_us')\n    await inputPassword.sendKeys('secret_sauce')\n    await buttonLogin.click()\n//  Mengambil teks dari elemen pesan error\n    let errorMessageElement = await driver.wait(until.elementLocated(By.css('[data-test=\"error\"]')), 2000);\n    let actualErrorMessage = await errorMessageElement.getText();\n//  Membandingkan teks pesan error yang didapat dengan teks pesan error yang diharapkan\n    assert.strictEqual(actualErrorMessage, 'Epic sadface: Username and password do not match any user in this service', 'Pesan error tidak sesuai dengan yang diharapkan.');\n//  Driver akan ditutup\n    await driver.quit();",
              "err": {},
              "uuid": "d1b96d3e-ed10-4141-8000-ad6b3205a7de",
              "parentUUID": "d71526bc-8d2b-44fc-99d7-6059b5c60605",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3 - Login Positive Test Case",
              "fullTitle": "Google Search Test Test Case 3 - Login Positive Test Case",
              "timedOut": false,
              "duration": 3678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\n//  cek lokasi username dengan menggunakan css locator\n    let inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n    \n//  cek lokasi password dengan menggunakan xpath locator\n    let inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n//  cek lokasi tombol login dengan menggunakan classname locator\n    let buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \n//  input valid username, valid password dan klik tombol login dengan positive test case        \n    await inputUsername.sendKeys('standard_user')\n    await inputPassword.sendKeys('secret_sauce')\n    await buttonLogin.click()\n//  Memberi waktu maksimal 2 detik\n    await driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed: did not redirect to inventory page within 2 seconds.');\n\n    //  Verifikasi judul halaman setelah login\n        let pageTitle = await driver.getTitle();\n        assert.strictEqual(pageTitle, 'Swag Labs', 'Page title should be \"Swag Labs\" after successful login.');\n        console.log('Login successful and page title \"Swag Labs\" is correct.');\n        \n    //  Driver akan ditutup\n        await driver.quit();",
              "err": {},
              "uuid": "2c9dbdda-1fd4-4bbd-b9d9-ea9289b770ed",
              "parentUUID": "d71526bc-8d2b-44fc-99d7-6059b5c60605",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1b96d3e-ed10-4141-8000-ad6b3205a7de",
            "2c9dbdda-1fd4-4bbd-b9d9-ea9289b770ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "27ec6577-b59c-46a1-9000-9c845fa1ea95",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test3-sort.js",
          "file": "\\tests\\test3-sort.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 4 - Sort Product Z - A",
              "fullTitle": "Google Search Test Test Case 4 - Sort Product Z - A",
              "timedOut": false,
              "duration": 5430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n// Memberi waktu untuk membuka inventory html\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed within 2 seconds.');\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title \"Swag Labs\" after successful login.');\nconsole.log('Login successful');\n//Klik Value Z - A\nconst optionZa = await driver.findElement(By.xpath(\"//select[@class='product_sort_container']/option[@value='za']\"));\nawait optionZa.click();\nlet product_sort_container = await driver.findElement(By.xpath('//div[normalize-space()=\"Test.allTheThings() T-Shirt (Red)\"]'));\n//Cek urutan produk\nlet isProductDisplayed = await product_sort_container.isDisplayed();\nassert.strictEqual(isProductDisplayed, true, 'The \"Test.allTheThings() T-Shirt (Red)\" product should be displayed.');\nconsole.log('Berhasil mengklik opsi \"Name (Z to A)\".');\nawait driver.sleep(1700)\nawait driver.quit()",
              "err": {},
              "uuid": "34e91e9b-b300-4387-8ee8-d81dca0d3d71",
              "parentUUID": "27ec6577-b59c-46a1-9000-9c845fa1ea95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34e91e9b-b300-4387-8ee8-d81dca0d3d71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "c8324656-b46c-4b1e-badd-8d7474ba847f",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test_all.js",
          "file": "\\tests\\test_all.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1 - Web Address",
              "fullTitle": "Google Search Test Test Case 1 - Web Address",
              "timedOut": false,
              "duration": 3276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n        \n        //  cek tampilan dari alamat yang dituju dan menandakan test case 1 sukses\nconst title = await driver.getTitle();\nassert.strictEqual(title,'Swag Labs');\n        \n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "5ee46498-ffe3-4cfe-bef9-23da4af71b39",
              "parentUUID": "c8324656-b46c-4b1e-badd-8d7474ba847f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 2 - Login Negative Test Case",
              "fullTitle": "Google Search Test Test Case 2 - Login Negative Test Case",
              "timedOut": false,
              "duration": 3796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n\n        //  cek lokasi username dengan menggunakan css locator\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n\n        //  cek lokasi password dengan menggunakan xpath locator\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n\n        //  cek lokasi tombol login dengan menggunakan classname locator\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n\n        //  input username dengan invalid username, valid password dan klik tombol login dengan negative test case        \nawait inputUsername.sendKeys('standard_us')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n\n        //  Mengambil teks dari elemen pesan error\nlet errorMessageElement = await driver.wait(until.elementLocated(By.css('[data-test=\"error\"]')), 2000);\nlet actualErrorMessage = await errorMessageElement.getText();\n\n        //  Membandingkan teks pesan error yang didapat dengan teks pesan error yang diharapkan\nassert.strictEqual(actualErrorMessage, 'Epic sadface: Username and password do not match any user in this service', 'Pesan error tidak sesuai dengan yang diharapkan.');\n\n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "154cfcc8-8f3c-4bb7-bfd2-d7cccaf60272",
              "parentUUID": "c8324656-b46c-4b1e-badd-8d7474ba847f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3 - Login Positive Test Case",
              "fullTitle": "Google Search Test Test Case 3 - Login Positive Test Case",
              "timedOut": false,
              "duration": 3563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n\n        //  cek lokasi username dengan menggunakan css locator\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n\n        //  cek lokasi password dengan menggunakan xpath locator\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n\n        //  cek lokasi tombol login dengan menggunakan classname locator\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n\n        //  input valid username, valid password dan klik tombol login dengan positive test case        \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n\n        //  Memberi waktu maksimal 2 detik\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed: did not redirect to inventory page within 2 seconds.');\n        \n        //  Verifikasi judul halaman setelah login\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title should be \"Swag Labs\" after successful login.');\nconsole.log('Login successful and page title \"Swag Labs\" is correct.');\n    \n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "ccfb0cd2-9e6f-42e3-b279-ea7717dc39bf",
              "parentUUID": "c8324656-b46c-4b1e-badd-8d7474ba847f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 4 - Sort Product Z - A",
              "fullTitle": "Google Search Test Test Case 4 - Sort Product Z - A",
              "timedOut": false,
              "duration": 6343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n         \n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n         \nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n         \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n         \n        //  Memberi waktu untuk membuka inventory html\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed within 2 seconds.');\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title \"Swag Labs\" after successful login.');\nconsole.log('Login successful');\n         \n        //Klik Value Z - A\nconst optionZa = await driver.findElement(By.xpath(\"//select[@class='product_sort_container']/option[@value='za']\"));\nawait optionZa.click();\nlet product_sort_container = await driver.findElement(By.xpath('//div[normalize-space()=\"Test.allTheThings() T-Shirt (Red)\"]'));\n         \n        //Cek urutan produk\nlet isProductDisplayed = await product_sort_container.isDisplayed();\nassert.strictEqual(isProductDisplayed, true, 'The \"Test.allTheThings() T-Shirt (Red)\" product should be displayed.');\nconsole.log('Berhasil mengklik opsi \"Name (Z to A)\".');\n         \n        //  Driver diberi delay sebelum ditutup  \nawait driver.sleep(1700)\nawait driver.quit();",
              "err": {},
              "uuid": "8bdb0880-d913-44ae-8f41-cbfe1c564ea6",
              "parentUUID": "c8324656-b46c-4b1e-badd-8d7474ba847f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ee46498-ffe3-4cfe-bef9-23da4af71b39",
            "154cfcc8-8f3c-4bb7-bfd2-d7cccaf60272",
            "ccfb0cd2-9e6f-42e3-b279-ea7717dc39bf",
            "8bdb0880-d913-44ae-8f41-cbfe1c564ea6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}