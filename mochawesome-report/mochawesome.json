{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-22T22:53:51.361Z",
    "end": "2025-06-22T22:54:19.054Z",
    "duration": 27693,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "74c7d408-ec23-4a50-842a-cf35b38659fa",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e87f43d7-427d-4647-b04d-ad04186f60b8",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test1-web.js",
          "file": "\\tests\\test1-web.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1 - Web Address",
              "fullTitle": "Google Search Test Test Case 1 - Web Address",
              "timedOut": false,
              "duration": 4799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  browser yang dipergunakan chrome\n            driver = await new Builder().forBrowser('chrome').build();\n        \n        //  alamat browser\n            await driver.get('https://www.saucedemo.com');\n        //  cek tampilan dari alamat yang dituju dan menandakan test case 1 sukses\n            const title = await driver.getTitle();\n            assert.strictEqual(title,'Swag Labs');\n        //  menutup web driver\n            await driver.quit();",
              "err": {},
              "uuid": "b01dc8e5-4238-48be-bc69-b2a25f474493",
              "parentUUID": "e87f43d7-427d-4647-b04d-ad04186f60b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b01dc8e5-4238-48be-bc69-b2a25f474493"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "e8df31f6-a627-47c4-9edd-17bdf871e573",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test2-login.js",
          "file": "\\tests\\test2-login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 2 - Login Negative Test Case",
              "fullTitle": "Google Search Test Test Case 2 - Login Negative Test Case",
              "timedOut": false,
              "duration": 3197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\n//  cek lokasi username dengan menggunakan css locator\n    let inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n    \n//  cek lokasi password dengan menggunakan xpath locator\n    let inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n//  cek lokasi tombol login dengan menggunakan classname locator\n    let buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \n//  input username dengan invalid username, valid password dan klik tombol login dengan negative test case        \n    await inputUsername.sendKeys('standard_us')\n    await inputPassword.sendKeys('secret_sauce')\n    await buttonLogin.click()\n//  Mengambil teks dari elemen pesan error\n    let errorMessageElement = await driver.wait(until.elementLocated(By.css('[data-test=\"error\"]')), 2000);\n    let actualErrorMessage = await errorMessageElement.getText();\n//  Membandingkan teks pesan error yang didapat dengan teks pesan error yang diharapkan\n    assert.strictEqual(actualErrorMessage, 'Epic sadface: Username and password do not match any user in this service', 'Pesan error tidak sesuai dengan yang diharapkan.');\n//  Driver akan ditutup\n    await driver.quit();",
              "err": {},
              "uuid": "2d68b444-8f30-4003-9a97-0282a1ec212f",
              "parentUUID": "e8df31f6-a627-47c4-9edd-17bdf871e573",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3 - Login Positive Test Case",
              "fullTitle": "Google Search Test Test Case 3 - Login Positive Test Case",
              "timedOut": false,
              "duration": 3974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\n//  cek lokasi username dengan menggunakan css locator\n    let inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n    \n//  cek lokasi password dengan menggunakan xpath locator\n    let inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n//  cek lokasi tombol login dengan menggunakan classname locator\n    let buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \n//  input valid username, valid password dan klik tombol login dengan positive test case        \n    await inputUsername.sendKeys('standard_user')\n    await inputPassword.sendKeys('secret_sauce')\n    await buttonLogin.click()\n//  Memberi waktu maksimal 2 detik\n    await driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed: did not redirect to inventory page within 2 seconds.');\n\n    //  Verifikasi judul halaman setelah login\n        let pageTitle = await driver.getTitle();\n        assert.strictEqual(pageTitle, 'Swag Labs', 'Page title should be \"Swag Labs\" after successful login.');\n        console.log('Login successful and page title \"Swag Labs\" is correct.');\n        \n    //  Driver akan ditutup\n        await driver.quit();",
              "err": {},
              "uuid": "50ef0598-b63f-4c63-8558-27e3392c776b",
              "parentUUID": "e8df31f6-a627-47c4-9edd-17bdf871e573",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d68b444-8f30-4003-9a97-0282a1ec212f",
            "50ef0598-b63f-4c63-8558-27e3392c776b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "14deb7ef-5a90-479d-945f-7e0c8038a47e",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test3-sort.js",
          "file": "\\tests\\test3-sort.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 4 - Sort Product Z - A",
              "fullTitle": "Google Search Test Test Case 4 - Sort Product Z - A",
              "timedOut": false,
              "duration": 3379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.get('https://www.saucedemo.com');\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n    \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n// Memberi waktu untuk membuka inventory html\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed within 2 seconds.');\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title \"Swag Labs\" after successful login.');\nconsole.log('Login successful');\n//Klik Value Z - A\nconst optionZa = await driver.findElement(By.xpath(\"//select[@class='product_sort_container']/option[@value='za']\"));\nawait optionZa.click();\nlet product_sort_container = await driver.findElement(By.xpath('//div[normalize-space()=\"Test.allTheThings() T-Shirt (Red)\"]'));\n//Cek urutan produk\nlet isProductDisplayed = await product_sort_container.isDisplayed();\nassert.strictEqual(isProductDisplayed, true, 'The \"Test.allTheThings() T-Shirt (Red)\" product should be displayed.');\nconsole.log('Berhasil mengklik opsi \"Name (Z to A)\".');\nawait driver.quit()",
              "err": {},
              "uuid": "c91c7d72-ce56-4150-beac-042b4bd69456",
              "parentUUID": "14deb7ef-5a90-479d-945f-7e0c8038a47e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c91c7d72-ce56-4150-beac-042b4bd69456"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "67a332b1-b39e-4ae7-8df8-5b8a9e6d4873",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\henun\\Sesi9_Hendra\\tests\\test_all.js",
          "file": "\\tests\\test_all.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1 - Web Address",
              "fullTitle": "Google Search Test Test Case 1 - Web Address",
              "timedOut": false,
              "duration": 2730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n        \n        //  cek tampilan dari alamat yang dituju dan menandakan test case 1 sukses\nconst title = await driver.getTitle();\nassert.strictEqual(title,'Swag Labs');\n        \n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "e5c30730-03df-49c9-b58e-dcc7cd18a6d3",
              "parentUUID": "67a332b1-b39e-4ae7-8df8-5b8a9e6d4873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 2 - Login Negative Test Case",
              "fullTitle": "Google Search Test Test Case 2 - Login Negative Test Case",
              "timedOut": false,
              "duration": 3105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n\n        //  cek lokasi username dengan menggunakan css locator\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n\n        //  cek lokasi password dengan menggunakan xpath locator\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n\n        //  cek lokasi tombol login dengan menggunakan classname locator\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n\n        //  input username dengan invalid username, valid password dan klik tombol login dengan negative test case        \nawait inputUsername.sendKeys('standard_us')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n\n        //  Mengambil teks dari elemen pesan error\nlet errorMessageElement = await driver.wait(until.elementLocated(By.css('[data-test=\"error\"]')), 2000);\nlet actualErrorMessage = await errorMessageElement.getText();\n\n        //  Membandingkan teks pesan error yang didapat dengan teks pesan error yang diharapkan\nassert.strictEqual(actualErrorMessage, 'Epic sadface: Username and password do not match any user in this service', 'Pesan error tidak sesuai dengan yang diharapkan.');\n\n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "395ab427-44b6-433e-9eef-6200e402b3b5",
              "parentUUID": "67a332b1-b39e-4ae7-8df8-5b8a9e6d4873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3 - Login Positive Test Case",
              "fullTitle": "Google Search Test Test Case 3 - Login Positive Test Case",
              "timedOut": false,
              "duration": 3217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n\n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n\n        //  cek lokasi username dengan menggunakan css locator\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\n\n        //  cek lokasi password dengan menggunakan xpath locator\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\n\n        //  cek lokasi tombol login dengan menggunakan classname locator\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n\n        //  input valid username, valid password dan klik tombol login dengan positive test case        \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n\n        //  Memberi waktu maksimal 2 detik\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed: did not redirect to inventory page within 2 seconds.');\n        \n        //  Verifikasi judul halaman setelah login\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title should be \"Swag Labs\" after successful login.');\nconsole.log('Login successful and page title \"Swag Labs\" is correct.');\n    \n        //  Driver akan ditutup\nawait driver.quit();",
              "err": {},
              "uuid": "36e2191d-c933-4341-952d-87e127c68bdc",
              "parentUUID": "67a332b1-b39e-4ae7-8df8-5b8a9e6d4873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 4 - Sort Product Z - A",
              "fullTitle": "Google Search Test Test Case 4 - Sort Product Z - A",
              "timedOut": false,
              "duration": 3275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--incognito');\n         \n        driver = await new Builder()\n.forBrowser('chrome')\n.setChromeOptions(options)\n.build();\nawait driver.get('https://www.saucedemo.com');\n         \nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n         \nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n         \n        //  Memberi waktu untuk membuka inventory html\nawait driver.wait(until.urlContains('/inventory.html'), 2000, 'Login failed within 2 seconds.');\nlet pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, 'Swag Labs', 'Page title \"Swag Labs\" after successful login.');\nconsole.log('Login successful');\n         \n        //Klik Value Z - A\nconst optionZa = await driver.findElement(By.xpath(\"//select[@class='product_sort_container']/option[@value='za']\"));\nawait optionZa.click();\nlet product_sort_container = await driver.findElement(By.xpath('//div[normalize-space()=\"Test.allTheThings() T-Shirt (Red)\"]'));\n         \n        //Cek urutan produk\nlet isProductDisplayed = await product_sort_container.isDisplayed();\nassert.strictEqual(isProductDisplayed, true, 'The \"Test.allTheThings() T-Shirt (Red)\" product should be displayed.');\nconsole.log('Berhasil mengklik opsi \"Name (Z to A)\".');\n         \n        //  Driver akan ditutup   \nawait driver.quit();",
              "err": {},
              "uuid": "982467ce-8114-456a-af0b-e0ee53e86dea",
              "parentUUID": "67a332b1-b39e-4ae7-8df8-5b8a9e6d4873",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5c30730-03df-49c9-b58e-dcc7cd18a6d3",
            "395ab427-44b6-433e-9eef-6200e402b3b5",
            "36e2191d-c933-4341-952d-87e127c68bdc",
            "982467ce-8114-456a-af0b-e0ee53e86dea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}